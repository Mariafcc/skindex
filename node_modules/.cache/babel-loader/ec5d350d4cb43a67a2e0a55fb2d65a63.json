{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lucystrickland/codingbootcamp/skindex/src/components/QuizModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport Quiz from \"../pages/Quiz\";\nimport \"../components/style/QuizModal.css\";\n\nfunction QuizModal(props) {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [questions, setQuestions] = useState(props); //or use useEffect and watch for props\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  console.log(props.questions);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"these are answers\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Begin Your Skin Assessment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: props.questions.map(res => {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: res.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), res.answers.map(answer => {\n              return /*#__PURE__*/_jsxDEV(Button, {\n                children: answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 26\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: (handleClose, handleSubmit),\n          children: \"Submit Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuizModal, \"ktmgAQnUlT9Ce+byI3LWFJgXWQ8=\");\n\n_c = QuizModal;\nexport default QuizModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizModal\");","map":{"version":3,"sources":["/Users/lucystrickland/codingbootcamp/skindex/src/components/QuizModal.js"],"names":["React","useState","useEffect","Button","Modal","Quiz","QuizModal","props","show","setShow","userAnswers","setUserAnswers","questions","setQuestions","handleClose","handleShow","console","log","handleSubmit","e","preventDefault","map","res","question","answers","answer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAO,mCAAP;;AAIA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAACM,KAAD,CAA1C,CAJwB,CAKxB;;AAEA,QAAMO,WAAW,GAAG,MAAML,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAMM,UAAU,GAAG,MAAMN,OAAO,CAAC,IAAD,CAAhC;;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACK,SAAlB;;AAEA,QAAMM,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAEF,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEP,IADR;AAEE,MAAA,MAAM,EAAEM,WAFV;AAGE,MAAA,QAAQ,EAAC,QAHX;AAIE,MAAA,QAAQ,EAAE,KAJZ;AAAA,8BAME,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eASE,QAAC,KAAD,CAAO,IAAP;AAAA,kBACGP,KAAK,CAACK,SAAN,CAAgBS,GAAhB,CAAoBC,GAAG,IAAI;AAC1B,8BACE,QAAC,KAAD,CAAO,QAAP;AAAA,oCACE;AAAA,wBAAKA,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGD,GAAG,CAACE,OAAJ,CAAYH,GAAZ,CAAgBI,MAAM,IAAI;AACzB,kCAAO,QAAC,MAAD;AAAA,0BAASA;AAAT;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATA;AADH;AAAA;AAAA;AAAA;AAAA,cATF,eAqBE,QAAC,KAAD,CAAO,MAAP;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,GAAEX,WAAW,EAAEI,YAAf,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAmCD;;GAnDQZ,S;;KAAAA,S;AAsDT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\"\nimport Quiz from \"../pages/Quiz\";\nimport \"../components/style/QuizModal.css\";\n\n\n\nfunction QuizModal(props) {\n  const [show, setShow] = useState(false);\n  const [userAnswers, setUserAnswers] = useState([])\n\n  const [questions, setQuestions] = useState(props)\n  //or use useEffect and watch for props\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  console.log(props.questions)\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"these are answers\")\n  };\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Begin Your Skin Assessment\n        </Button>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title></Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {props.questions.map(res => {\n            return (\n              <React.Fragment>\n                <h3>{res.question}</h3>\n                {res.answers.map(answer => {\n                  return <Button>{answer}</Button>\n                })}\n              </React.Fragment>\n            )\n          })}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose, handleSubmit}>\n            Submit Answers\n            </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\n\nexport default QuizModal;"]},"metadata":{},"sourceType":"module"}
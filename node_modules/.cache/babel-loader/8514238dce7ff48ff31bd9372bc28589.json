{"ast":null,"code":"/* eslint-disable promise/always-return */\n// const Firebase = () => {\n//     const functions = require('firebase-functions');\n//     const admin = require('firebase-admin');\n//     var serviceAccount = require(\"./skindexPremission.json\");\n//     admin.initializeApp({\n//     credential: admin.credential.cert(serviceAccount),\n//     databaseURL: \"https://skindex-3feb3.firebaseio.com\"\n//     });\n//     const express = require('express');\n//     const app = express();\n//     const db = admin.firestore();\n//     const cors = require('cors');\n//     app.use(cors({origin:true}))\n//     //Routes\n//     app.get('/hello-world', (req, res) => {\n//         return res.status(200).send('Hello World!');\n//     })\n//     //Create\n//     //Post\n//     app.post('/api/create', (req, res) => {\n//         (async () => {\n//             try\n//             {\n//                 await db.collection('products').doc('/' + req.body.id + '/')\n//                 .create({\n//                     name: req.body.name,\n//                     // productType: req.body.productType,\n//                     price:req.body.price\n//                     // order:req.body.order\n//                 })\n//                 return res.status(200).send();\n//             }\n//             catch (error)\n//             {\n//                 console.log(error);\n//                 return res.status(500).send(error);\n//             }\n//         })();\n//     });\n//     //Read a specific product based on ID\n//     //Get\n//     app.get('/api/read/:id', (req, res) => {\n//         (async () => {\n//             try\n//             {\n//                 const document = db.collection('products').doc(req.params.id);\n//                 let product = await document.get();\n//                 let response =product.data();\n//                 return res.status(200).send(response);\n//             }\n//             catch (error)\n//             {\n//                 console.log(error);\n//                 return res.status(500).send(error);\n//             }\n//         })();\n//     });\n//     //Read all products\n//     //Get\n//     app.get('/api/read/', (req, res) => {\n//         (async () => {\n//             try\n//             {\n//                 let query = db.collection('products');\n//                 let response = [];\n//                 await query.get().then(querySnapshot => {\n//                     let docs = querySnapshot.docs;\n//                     for (let doc of docs) {\n//                         const selectedItem = {\n//                             id: doc.id,\n//                             name: doc.data().name,\n//                             description: doc.data().description,\n//                             price: doc.data().price\n//                         };\n//                         response.push(selectedItem);\n//                     }\n//                     return response;\n//                 })\n//                 return res.status(200).send(response);\n//             }\n//             catch (error)\n//             {\n//                 console.log(error);\n//                 return res.status(500).send(error);\n//             }\n//         })();\n//     });\n//     //Update\n//     //Put\n//     app.put('/api/update/:id', (req, res) => {\n//         (async () => {\n//             try\n//             {\n//                 const document = db.collection('products').doc(req.params.id);\n//                 console.log(req.body, \"req\");\n//                 await document.update({\n//                     name: req.body.name,\n//                     description: req.body.description,\n//                     price:req.body.price\n//                 });\n//                 console.log(res, \"response\");\n//                 return res.status(200).send();\n//             }\n//             catch (error)\n//             {\n//                 console.log(\"update put\");\n//                 return res.status(500).send(error);\n//             }\n//         })();\n//     });\n//     //Delete\n//     app.delete('/api/delete/:id', (req, res) => {\n//         (async () => {\n//             try\n//             {\n//                 const document = db.collection('products').doc(req.params.id);\n//                 await document.delete();\n//                 return res.status(200).send();\n//             }\n//             catch (error)\n//             {\n//                 console.log(error);\n//                 return res.status(500).send(error);\n//             }\n//         })();\n//     });\n//     exports.app = functions.https.onRequest(app);\n// }\n// export default Firebase;\n//Export the app to firebase cloud functions","map":{"version":3,"sources":["/Users/lucystrickland/codingbootcamp/skindex/src/utils/firebase/functions/API.js"],"names":[],"mappingssourcesContent":["/* eslint-disable promise/always-return */\n\n// const Firebase = () => {\n//     const functions = require('firebase-functions');\n//     const admin = require('firebase-admin');\n\n//     var serviceAccount = require(\"./skindexPremission.json\");\n\n//     admin.initializeApp({\n//     credential: admin.credential.cert(serviceAccount),\n//     databaseURL: \"https://skindex-3feb3.firebaseio.com\"\n//     });\n\n//     const express = require('express');\n//     const app = express();\n//     const db = admin.firestore();\n\n//     const cors = require('cors');\n//     app.use(cors({origin:true}))\n\n//     //Routes\n//     app.get('/hello-world', (req, res) => {\n//         return res.status(200).send('Hello World!');\n//     })\n\n\n//     //Create\n//     //Post\n//     app.post('/api/create', (req, res) => {\n//         (async () => {\n//             try\n//             {\n//                 await db.collection('products').doc('/' + req.body.id + '/')\n//                 .create({\n//                     name: req.body.name,\n//                     // productType: req.body.productType,\n//                     price:req.body.price\n//                     // order:req.body.order\n//                 })\n\n//                 return res.status(200).send();\n//             }\n//             catch (error)\n//             {\n//                 console.log(error);\n//                 return res.status(500).send(error);\n//             }\n//         })();\n//     });\n\n//     //Read a specific product based on ID\n//     //Get\n//     app.get('/api/read/:id', (req, res) => {\n//         (async () => {\n//             try\n//             {\n//                 const document = db.collection('products').doc(req.params.id);\n//                 let product = await document.get();\n//                 let response =product.data();\n\n//                 return res.status(200).send(response);\n//             }\n//             catch (error)\n//             {\n//                 console.log(error);\n//                 return res.status(500).send(error);\n//             }\n//         })();\n//     });\n\n\n//     //Read all products\n//     //Get\n//     app.get('/api/read/', (req, res) => {\n//         (async () => {\n//             try\n//             {\n//                 let query = db.collection('products');\n//                 let response = [];\n\n//                 await query.get().then(querySnapshot => {\n//                     let docs = querySnapshot.docs;\n\n//                     for (let doc of docs) {\n//                         const selectedItem = {\n//                             id: doc.id,\n//                             name: doc.data().name,\n//                             description: doc.data().description,\n//                             price: doc.data().price\n//                         };\n//                         response.push(selectedItem);\n//                     }\n//                     return response;\n//                 })\n//                 return res.status(200).send(response);\n//             }\n//             catch (error)\n//             {\n//                 console.log(error);\n//                 return res.status(500).send(error);\n//             }\n//         })();\n//     });\n\n\n//     //Update\n//     //Put\n//     app.put('/api/update/:id', (req, res) => {\n//         (async () => {\n//             try\n//             {\n//                 const document = db.collection('products').doc(req.params.id);\n                \n//                 console.log(req.body, \"req\");\n\n//                 await document.update({\n//                     name: req.body.name,\n//                     description: req.body.description,\n//                     price:req.body.price\n//                 });\n//                 console.log(res, \"response\");\n//                 return res.status(200).send();\n//             }\n//             catch (error)\n//             {\n//                 console.log(\"update put\");\n//                 return res.status(500).send(error);\n//             }\n//         })();\n//     });\n\n\n//     //Delete\n//     app.delete('/api/delete/:id', (req, res) => {\n//         (async () => {\n//             try\n//             {\n//                 const document = db.collection('products').doc(req.params.id);\n\n//                 await document.delete();\n\n//                 return res.status(200).send();\n//             }\n//             catch (error)\n//             {\n//                 console.log(error);\n//                 return res.status(500).send(error);\n//             }\n//         })();\n//     });\n//     exports.app = functions.https.onRequest(app);\n// }\n\n// export default Firebase;\n\n//Export the app to firebase cloud functions"]},"metadata":{},"sourceType":"module"}
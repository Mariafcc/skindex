{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lucystrickland/codingbootcamp/skindex/src/components/QuizModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport Quiz from \"../pages/Quiz\";\nimport \"../components/style/QuizModal.css\";\n\nfunction QuizModal(props) {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [questions, setQuestions] = useState(props); //or use useEffect and watch for props\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true); // console.log(props.questions)\n\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.log(\"this works?\")\n  };\n\n  const handleAnswers = e => {\n    e.preventDefault();\n    const selection = {\n      id: parseInt(e.target.id),\n      selected: e.target.value\n    };\n    setUserAnswers([...userAnswers, selected]);\n    const filtered = userAnswers.map(answer => {\n      // console.log(\"answer.id\", answer.id)\n      // console.log(\"selection.id\", selection.id)\n      return answer.id === selection.id ? answer.selected = e.target.value : answer;\n    }); // console.log(selection)\n\n    console.log(filtered);\n    setUserAnswers([...filtered]); // console.log(\"===== these are =====\")\n    // console.log(e.target.id)\n  };\n\n  console.log(userAnswers);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Begin Your Skin Assessment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: props.questions.map(res => {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: res.question\n            }, res.question, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), res.answers.map(answer => {\n              return /*#__PURE__*/_jsxDEV(Button, {\n                id: res.id,\n                value: answer,\n                onClick: handleAnswers,\n                children: answer\n              }, res.answer, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 26\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: (handleClose, handleSubmit),\n          children: \"Submit Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuizModal, \"ktmgAQnUlT9Ce+byI3LWFJgXWQ8=\");\n\n_c = QuizModal;\nexport default QuizModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizModal\");","map":{"version":3,"sources":["/Users/lucystrickland/codingbootcamp/skindex/src/components/QuizModal.js"],"names":["React","useState","useEffect","Button","Modal","Quiz","QuizModal","props","show","setShow","userAnswers","setUserAnswers","questions","setQuestions","handleClose","handleShow","handleSubmit","e","preventDefault","handleAnswers","selection","id","parseInt","target","selected","value","filtered","map","answer","console","log","res","question","answers"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\"\nimport Quiz from \"../pages/Quiz\";\nimport \"../components/style/QuizModal.css\";\n\n\n\nfunction QuizModal(props) {\n  const [show, setShow] = useState(false);\n  const [userAnswers, setUserAnswers] = useState([])\n\n  const [questions, setQuestions] = useState(props)\n  //or use useEffect and watch for props\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  // console.log(props.questions)\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    // console.log(\"this works?\")\n  };\n  const handleAnswers = e => {\n    e.preventDefault();\n    const selection = {id: parseInt(e.target.id), selected: e.target.value}\n    setUserAnswers([...userAnswers, selected])\n    const filtered = userAnswers.map(answer => {\n      // console.log(\"answer.id\", answer.id)\n      // console.log(\"selection.id\", selection.id)\n      return answer.id === selection.id ? answer.selected = e.target.value : answer\n    })\n    // console.log(selection)\n    console.log(filtered)\n    setUserAnswers([...filtered])\n    // console.log(\"===== these are =====\")\n    // console.log(e.target.id)\n  };\n\n  console.log(userAnswers)\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Begin Your Skin Assessment\n        </Button>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title></Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {props.questions.map(res => {\n            return (\n              <React.Fragment>\n                <h3 key={res.question}>{res.question}</h3>\n                {res.answers.map(answer => {\n                  return <Button id={res.id} value={answer} key={res.answer} onClick={handleAnswers}>{answer}</Button>\n                })}\n              </React.Fragment>\n            )\n          })}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose, handleSubmit}>\n            Submit Answers\n            </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\n\nexport default QuizModal;"]},"metadata":{},"sourceType":"module"}